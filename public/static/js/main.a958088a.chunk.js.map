{"version":3,"sources":["Header.js","Note.js","NotesList.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","href","Note","id","initialTitle","initialText","removeNote","updateNote","useState","setTitle","text","setText","editable","setEditable","style","backgroundColor","border","fontSize","marginBottom","spellCheck","disabled","value","onChange","e","target","rows","hidden","onClick","NotesList","notes","map","note","_id","Footer","App","setNotes","useEffect","axios","get","then","res","data","addNote","post","newNotes","delete","filter","updatedNote","put","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a958088a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <nav className=\"justify-content-center navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/#\">{title}</a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nconst Note = ({ id, initialTitle, initialText, removeNote, updateNote }) => {\r\n\r\n  // note title state\r\n  const [title, setTitle] = useState(initialTitle);\r\n  // note text state\r\n  const [text, setText] = useState(initialText);\r\n  // editable state\r\n  const [editable, setEditable] = useState(false);\r\n\r\n  // handlers\r\n  // save handler\r\n  const handleSave = () => {\r\n    updateNote(id, title, text);\r\n    setEditable(!editable);\r\n  };\r\n\r\n  // CSS override de bootstrap\r\n  const inputStyle = {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    fontSize: 1.25+'rem',\r\n    marginBottom: 0.75+'rem'\r\n  };\r\n  const textareaStyle = {\r\n    backgroundColor: 'transparent',\r\n    border: 'none'\r\n  };\r\n\r\n  // render JSX\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n\r\n        <input\r\n          style={inputStyle}\r\n          spellCheck={false}\r\n          disabled={!editable}\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <textarea\r\n          rows={5}\r\n          style={textareaStyle}\r\n          spellCheck={false}\r\n          disabled={!editable}\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        >\r\n        </textarea>\r\n        <br />\r\n\r\n        <button className=\"btn\" hidden={editable} onClick={() => setEditable(!editable)}>\r\n          <i className=\"text-secondary fa fa-pencil fa-lg\"></i>\r\n        </button>\r\n\r\n        <button className=\"btn\" hidden={!editable} onClick={handleSave}>\r\n          <i className=\"text-secondary fa fa-save fa-lg\"></i>\r\n        </button>\r\n\r\n        <button className=\"btn\" onClick={() => removeNote(id)}>\r\n          <i className=\"text-danger fa fa-trash fa-lg\"></i>\r\n        </button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({ notes, removeNote, updateNote }) => {\r\n\r\n  // render JSX\r\n  return (\r\n    <div className=\"card-columns\">\r\n      {notes.map((note) => (\r\n        <Note\r\n          id={note._id}\r\n          key={note._id}\r\n          initialTitle={note.title}\r\n          initialText={note.text}\r\n          removeNote={removeNote}\r\n          updateNote={updateNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;","import React from 'react';\r\n\r\n// footer component\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"text-center mb-3\">\r\n      <hr />\r\n      <h4 className=\"text-muted\">Hello React</h4>\r\n      <a href=\"https://github.com/santiagotrini/hello-react\">\r\n        <i className=\"fa fa-github fa-3x text-dark\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","// imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport NotesList from './NotesList';\nimport NoteForm from './NoteForm';\nimport Footer from './Footer';\n\nconst App = () => {\n\n  // useState hook (las notas de la lista)\n  const [notes, setNotes] = useState([]);\n\n  // useEffect hook (para fetchear la data al cargar)\n  useEffect(() => {\n    axios.get('/api/notes')\n      .then(res => {\n        setNotes(res.data.notes);\n      });\n  }, []);\n\n  // CRUD functions\n  // create note\n  const addNote = note => {\n    axios.post('/api/notes', note)\n      .then(res => {\n        const newNotes = [res.data, ...notes];\n        setNotes(newNotes);\n      });\n  };\n\n  // update note\n  const updateNote = (id, title, text) => {\n    const updatedNote = {\n      title: title,\n      text: text\n    };\n    axios.put('/api/notes/' + id, updatedNote)\n      .then(res => {\n        const newNotes = notes.map(note =>\n          note.id === id ? updatedNote : note\n        );\n        setNotes(newNotes);\n      });\n  };\n\n  // delete note\n  const removeNote = (id) => {\n    axios.delete('/api/notes/' + id)\n      .then(res => {\n        const newNotes = notes.filter(note => note._id !== id);\n        setNotes(newNotes);\n    });\n  };\n\n  // render JSX\n  return (\n    <div>\n      <Header title='Notas'/>\n      <div className=\"container mt-3\">\n        <NoteForm\n          addNote={addNote}\n        />\n        <hr />\n        <NotesList\n          notes={notes}\n          removeNote={removeNote}\n          updateNote={updateNote}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\n// export\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}